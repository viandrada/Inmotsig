<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets">

<ui:composition>
	<script type="text/javascript"
		src="http://www.openlayers.org/api/OpenLayers.js">
    </script>

<style>
      .olFramedCloudPopupContent {
	    overflow-x: hidden;
	    overflow-y: auto;
      }
      .olControlEditingToolbar .olControlDrawFeaturePointItemInactive {
	  background-image: url("http://localhost:8080/Inmotsig/resources/images/draw.png");
	  background-position-x: 0;
      }
	 
	  
	  .olControlEditingToolbar .olControlSaveFeaturePointItemInactive{
	  background-image: url("http://localhost:8080/Inmotsig/resources/images/save.png");
	  background-position-x: 0;
	  }
	
	  	  .olControlEditingToolbar .olControlModifyFeaturePointItemInactive{
	  background-image: url("http://localhost:8080/Inmotsig/resources/images/mano.png");
	  background-position-x: 0;
	  }
	  .olControlEditingToolbar .olControlModifyFeaturePointItemActive{
	  background-image: url("http://localhost:8080/Inmotsig/resources/images/mano.png");
	  background-position-x: 0;
	  }
    </style>
    
	<div id="mapa" style="width: 99%; height: 560px;"></div>

	<style>
.olFramedCloudPopupContent {
	overflow-x: hidden;
	overflow-y: auto;
}
</style>
	<script type="text/javascript">
  	//<![CDATA[	
    function comparar(x,y){
    		if(x==y){
    			return 0;
    		}
    		if(x<y){
    			return 1;
    		}
    		if(x>y){
    			return -1;
    		}
    	}
    	//]]>
    </script>

	<script type="text/javascript">
	
var wfsTasmaniaRoads,comercios,liceos,paradas; 
var saveStrategy;
var dista,distaComercio,distaLiceo,distaParada;
saveStrategy = new OpenLayers.Strategy.Save();

var lonlat4 = new OpenLayers.LonLat(-56.21, -34.81).transform(
		new OpenLayers.Projection("EPSG:4326"),
		new OpenLayers.Projection("EPSG:32721"));
var sum3 = 0.000785794448853;
var bound1 = new OpenLayers.Bounds(lonlat4.lon + sum3, lonlat4.lat + sum3, lonlat4.lon
- sum3, lonlat4.lat - sum3);
var filterP=new OpenLayers.Filter.Spatial({
    type: OpenLayers.Filter.Spatial.BBOX,
    value: bound1,
    projection : new OpenLayers.Projection('EPSG:4326')
});

var wfsPadrones = new OpenLayers.Layer.Vector("WFS", {
	  strategies: [new OpenLayers.Strategy.BBOX()],
	  style: { strokeColor: "#ff00ff", strokeWidth: 3, fillOpacity: 0 },
	  protocol: new OpenLayers.Protocol.WFS({
	    url: "http://localhost:8080/geoserver/wfs", 
	 	featureType: "padronesdireccion",
	    featureNS: "http://www.openplans.org/topp",
	    geometryName: "geom"
	  }),
	  filter:filterP  
});


rambla =   new OpenLayers.Layer.Vector("Rambla", {
	 strategies: [new OpenLayers.Strategy.BBOX(),],
	  protocol: new OpenLayers.Protocol.WFS({
	    url: "http://localhost:8080/geoserver/wfs", 
	    featureType: "rambla",
	    featureNS: "http://www.openplans.org/topp",
	    geometryName: "geom"
	    
	  })
}); 

var style = new OpenLayers.Style({
	'fillColor': '#669933',
	'fillOpacity': 0,
	'strokeColor': '#aaee77',
	'strokeWidth': 0,
	'pointRadius': 0	
	});

var vector_style_map = new OpenLayers.StyleMap({
	'default': style
	});

var filterComercios=new OpenLayers.Filter.Spatial({
    type: OpenLayers.Filter.Spatial.BBOX,
    value:new OpenLayers.Bounds(1,1,1,1),
    projection : new OpenLayers.Projection('EPSG:4326')
});

comercios =   new OpenLayers.Layer.Vector("Comercios", {
	 strategies: [new OpenLayers.Strategy.BBOX(),],
	  protocol: new OpenLayers.Protocol.WFS({
	    url: "http://localhost:8080/geoserver/wfs", 
	    featureType: "comercios",
	    featureNS: "http://www.openplans.org/topp",
	    geometryName: "geom"
	    
	  })
	  
}); 
comercios.filter = filterComercios;
comercios.styleMap = vector_style_map;

liceos =   new OpenLayers.Layer.Vector("Liceos", {
	 strategies: [new OpenLayers.Strategy.BBOX(),],
	  protocol: new OpenLayers.Protocol.WFS({
	    url: "http://localhost:8080/geoserver/wfs", 
	    featureType: "secundaria",
	    featureNS: "http://www.openplans.org/topp",
	    geometryName: "geom"
	    
	  })
	  
}); 

paradas =   new OpenLayers.Layer.Vector("Paradas", {
	 strategies: [new OpenLayers.Strategy.BBOX(),],
	  protocol: new OpenLayers.Protocol.WFS({
	    url: "http://localhost:8080/geoserver/wfs", 
	    featureType: "paradas",
	    featureNS: "http://www.openplans.org/topp",
	    geometryName: "geom"
	    
	  })
	  
}); 


paradas.filter = filterComercios;
paradas.styleMap = vector_style_map;

liceos.filter = filterComercios;
liceos.styleMap = vector_style_map;

comercios.filter = filterComercios;
comercios.styleMap = vector_style_map;


wfsTasmaniaRoads = new OpenLayers.Layer.Vector("WFS", {
	  strategies: [new OpenLayers.Strategy.BBOX(),saveStrategy],
	  style: {
	        externalGraphic: 'http://publicdomainvectors.org/photos/sweet_home.png', 
	        graphicWidth: 21, 
	        graphicHeight: 25,
	        graphicYOffset: -24
	    },
	  protocol: new OpenLayers.Protocol.WFS({
	    url: "http://localhost:8080/geoserver/wfs", 
	    featureType: "propiedad",
	    featureNS: "http://www.openplans.org/topp",
	    geometryName: "geom",
	  })
}); 

window.onload = function() {
// esto es por un bug en para wfs
			var _class = OpenLayers.Format.XML;
			var originalWriteFunction = _class.prototype.write;
		
			var patchedWriteFunction = function() {
			    var child = originalWriteFunction.apply( this, arguments );
		
			    // NOTE: Remove the rogue namespaces as one block of text.
			    child = child.replace(new RegExp('xmlns:NS\\d+="" NS\\d+:', 'g'), '');
		
			    return child;
			}
		
			_class.prototype.write = patchedWriteFunction;
// aca termina lo del bug			
			
	
	
	mapa = new OpenLayers.Map("mapa");

	var osm  = new OpenLayers.Layer.OSM();	
	var panel = new OpenLayers.Control.Panel({
                displayClass: "olControlEditingToolbar"
            });
	
	var draw = new OpenLayers.Control.DrawFeature(
		    		wfsTasmaniaRoads, OpenLayers.Handler.Point,
		                {
		                    handlerOptions: {freehand: false, multi: true},
		                    displayClass: "olControlDrawFeaturePoint"
		                    
		                }
	);
		    
	draw.events.register('featureadded',draw ,agregarDatos);
	
	var f;
	function agregarDatos(e){
 		    	f=e.feature;

 		    	lon = f.geometry.getBounds().getCenterLonLat().lon;
 		    	lat = f.geometry.getBounds().getCenterLonLat().lat;
 		    	var minx, miny;
 		    	var point = new OpenLayers.LonLat(lon, lat);
 		    	point.transform(new OpenLayers.Projection('EPSG:3857'),
						new OpenLayers.Projection('EPSG:4326'));
 		    	minx = point.lon;
 		    	miny = point.lat;
 		    	var sum = 0.005585794448853;

 		    	var bounds_object = new OpenLayers.Bounds(minx + sum, miny + sum, minx - sum, miny - sum);

/*
               wfsPadrones.filter=new OpenLayers.Filter.Spatial({
               type: OpenLayers.Filter.Spatial.BBOX,
               value: bounds_object,
               //projection : new OpenLayers.Projection('EPSG:4326')
               });
*/
               comercios.filter=new OpenLayers.Filter.Spatial({
                   type: OpenLayers.Filter.Spatial.BBOX,
                   value: bounds_object,
                   //projection : new OpenLayers.Projection('EPSG:4326')
                   });
				liceos.filter=new OpenLayers.Filter.Spatial({
				    type: OpenLayers.Filter.Spatial.BBOX,
				    value: bounds_object,
				    //projection : new OpenLayers.Projection('EPSG:4326')
				    });
				paradas.filter=new OpenLayers.Filter.Spatial({
				    type: OpenLayers.Filter.Spatial.BBOX,
				    value: bounds_object,
				    //projection : new OpenLayers.Projection('EPSG:4326')
				    });

               comercios.refresh({force:true});
               liceos.refresh({force:true});
               paradas.refresh({force:true});
             //  wfsPadrones.refresh({force:true});

				lon2 = f.geometry.getBounds().getCenterLonLat().lon;
 		       lat2 = f.geometry.getBounds().getCenterLonLat().lat;
 		       var minx2, miny2;
 		       var point2 = new OpenLayers.LonLat(lon2, lat2);
 		       point2.transform(new OpenLayers.Projection('EPSG:3857'),
 		   		new OpenLayers.Projection('EPSG:4326'));
 		       minx2 = point2.lon;
 		       miny2 = point2.lat;
 		       var sum2 = 0.000385794448853;

 		       var bounds_object2 = new OpenLayers.Bounds(minx2 + sum2, miny2 + sum2, minx2 - sum2, miny2 - sum2);


 		                 wfsPadrones.filter=new OpenLayers.Filter.Spatial({
 		                 type: OpenLayers.Filter.Spatial.BBOX,
 		                 value: bounds_object2,
 		                 //projection : new OpenLayers.Projection('EPSG:4326')
 		                 });
 		                
 		                 wfsPadrones.refresh({force:true});
 		    	

 		                 
 		                 setTimeout(function(){
				
			                var fMinD=wfsPadrones.features[0];
			                
						var geom_1 = new OpenLayers.Geometry.Point(fMinD.geometry.x, fMinD.geometry.y);
						var geom_2 = new OpenLayers.Geometry.Point(lon, lat);
						var dist= geom_1.distanceTo(geom_2);    
						
						var fAux;
			        for(var i=1;comparar(i,wfsPadrones.features.length-1)==1;i++ ){
			        	fAux=wfsPadrones.features[i];
			        	geom_1 = new OpenLayers.Geometry.Point(fAux.geometry.x, fAux.geometry.y);
			        	if(comparar(geom_2.distanceTo(geom_1),dist)==1){
			    			dist=geom_2.distanceTo(geom_1);
			    			fMinD=wfsPadrones.features[i];
			    		};
			    	};
			    	
			    	f.move(fMinD.geometry.getBounds().getCenterLonLat());           
               
 		    	f.popup = new OpenLayers.Popup.FramedCloud
                ("pop",
                f.geometry.getBounds().getCenterLonLat(),
                null,           
                '<div class="form-group">'+
	'<form class="form-horizontal">'+
		'<div class="row">'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
			      '<strong>Datos Propiedad: </strong>'+
		     '</div>'+
		'</div>'+
		
		'<div class="row">'+
		     '<div class="col-xs-8 col-sm-8 col-md-8 col-lg-8">'+
				  '<input class="form-control" type="text" value="'+fMinD.attributes.nom_calle+'" id="direccion" name="dir" placeholder="Dirección"></input>'+
		     '</div>'+
		     '<div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">'+
				  '<input class="form-control" placeholder="Nro de apto" value="'+fMinD.attributes.num_puerta+'" type="text" id="numAp" name="numApartamento"/>'+
		     '</div>'+
		'</div>'+
		
		'<div class="row">'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
			      '<h5>Tipo propiedad:</h5>'+
		     '</div>'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
			      '<select id="tipopropiedad" name="tprop" class="form-control">'+
			           '<option value="Casa">Casa</option>'+
				       '<option value="Apartamento">Apartamento</option>'+
				       '<option value="Terreno">Terreno</option>'+
			      '</select>'+
		     '</div>'+
		 '</div>'+
		 
		'<div class="row">'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				'<h5>Tipo transacción:</h5>'+
			 '</div>'+
			 '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				'<select id="tipotransaccion" name="ttrans" class="form-control">'+
				    '<option value="Compra">Compra</option>'+
				    '<option value="Alquiler">Alquiler</option>'+
				'</select>'+
			  '</div>'+
		'</div>'+
		
		'<div class="row">'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				'<h5>Barrio:</h5>'+
			 '</div>'+
			 '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				'<select id="barrio" name="barr" class="form-control"><option value="Aguada">Aguada</option>'+
				'<option value="BarrioSur">Barrio Sur</option>'+
				'<option value="BellaVista">Bella Vista</option>'+
				'<option value="Buceo">Buceo</option>'+
				'<option value="BrazoOriental">Brazo Oriental</option>'+
				'<option value="Carrasco">Carrasco</option>'+
				'<option value="CarrascoNorte">Carrasco Norte</option>'+
				'<option value="Centro">Centro</option>'+
				'<option value="CiudadVieja">Ciudad Vieja</option>'+
				'<option value="Cordon">Cordon</option>'+
				'<option value="Goes">Goes</option>'+
				'<option value="JacintoVera">Jacinto Vera</option>'+
				'<option value="LaBlanqueada">La Blanqueada</option>'+
				'<option value="LaTeja">La Teja</option>'+
				'<option value="Malvin">Malvin</option>'+
				'<option value="MalvinNorte">Malvín Norte</option>'+
				'<option value="Maronas">Maroñas</option>'+
				'<option value="Palermo">Palermo</option>'+
				'<option value="ParqueBatlle">Parque Batlle</option>'+
				'<option value="ParqueRodo">Parque Rodo</option>'+
				'<option value="Pocitos">Pocitos</option>'+
				'<option value="Prado">Prado</option>'+
				'<option value="PuntaCarretas">Punta Carretas</option>'+
				'<option value="PuntaGorda">Punta Gorda</option>'+
				'<option value="Reducto">Reducto</option>'+
				'<option value="Sayago">Sayago</option>'+
				'<option value="TreCruces">Tres Cruces</option>'+
				'<option value="Union">Unión</option>'+
				'<option value="VillaDelCerro">Villa del Cerro</option>'+
				'</select>'+
			'</div>'+
		'</div>'+
		
		'<div class="row">'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				'<input class="form-control" type="text" id="precio" name="pre" placeholder="Precio" />'+
			 '</div>'+
			 '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				'<input class="form-control" type="text" id="tamanio" name="tam" placeholder="Tamaño" />'+
			 '</div>'+
		'</div>'+
		
		'<div class="row">'+
		    '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
		         '<h5>Dormitorios:</h5>'+
		    '</div>'+
		    '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
		         '<select id="dormitorios" name="dor" class="form-control">'+
			         '<option value="0">0</option>'+
				     '<option value="1">1</option>'+
				     '<option value="2">2</option>'+
				     '<option value="3">3</option>'+
				     '<option value="4">4</option>'+
				     '<option value="5">5</option>'+
				     '<option value="6">6</option>'+
				 '</select>'+
			'</div>'+
		'</div>'+
		
		'<div class="row">'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
			      '<h5>Baños:</h5>'+
			 '</div>'+
			 '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
			      '<select id="banos" name="ban" class="form-control">'+
				      '<option value="0">0</option>'+
				      '<option value="1">1</option>'+
				      '<option value="2">2</option>'+
				      '<option value="3">3</option>'+
				      '<option value="4">4</option>'+
				      '<option value="5">5</option>'+
				   '</select>'+
			 '</div>'+
	    '</div>'+
	    
		'<div class="row">'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
		          '<h5>Garage:</h5>'+
		     '</div>'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				 '<select id="garage" name="gar" class="form-control">'+
				    '<option value="No">No</option>'+
				    '<option value="Si">Si</option></select>'+
			 '</div>'+
		'</div>'+
		
	    '<div class="row">'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
			     '<h5>Calefacción:</h5>'+
			 '</div>'+
			 '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				'<select id="calefaccion" name="cale" class="form-control">'+
				     '<option value="No">No</option>'+
				     '<option value="Si">Si</option></select>'+
			 '</div>'+
		'</div>'+
		
		'<div class="row">'+
	        '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
		         '<h5>Parrillero:</h5>'+
		    '</div>'+
		    '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				 '<select id="parrillero" name="parr" class="form-control">'+
				'<option value="No">No</option>'+
				'<option value="Si">Si</option></select>'+
			'</div>'+
		'</div>'+
		
		'<div class="row">'+
		    '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
			     '<h5>Piscina:</h5>'+
			'</div>'+
			'<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				'<select id="piscina" name="pis" class="form-control">'+
				'<option value="No">No</option>'+
				'<option value="Si">Si</option></select>'+
		     '</div>'+
		'</div>'+
		
		'<div class="row">'+
		    '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
		         '<h5>Estado:</h5>'+
		    '</div>'+
		    '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
				'<select id="estado" name="est" class="form-control">'+
				'<option value="Privada">Privada</option>'+
				'<option value="Publica">Publica</option></select>'+
			'</div>'+
		'</div>'+
		
		'<div class="row">'+
		    '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">'+
			    '<textarea type="text" id="descripcion" name="des" rows="2" placeholder="Descripción" class="form-control"/>'+
			'</div>'+
		'</div>'+
		'<div class="row">'+
	     '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">'+
         '<input id="imagen" multiple="multiple" type="file" class="form-control" value="" onchange="showImagen2()"/> '+
	      '<input style="display:none" id="imagen2" multiple="multiple" type="file" class="form-control" value="" onchange="showImagen3()"/>'+
	      '<input style="display:none" id="imagen3" multiple="multiple" type="file" class="form-control" value="" />'+
	         
	      '</div>'+
   '</div>'+
'</form>'+
'</div>',
                null,
                true 
                );
 		    	
 		    	//Aca llamar a la capa padron para obtener la direcicon a partir del punto donde se hizo click
 		    	
             mapa.addPopup(f.popup);

 		                }, 600); 

	};
		  
	var attributes = {direccion: "magallanes"};
	var select = new OpenLayers.Control.SelectFeature(wfsTasmaniaRoads);
    mapa.addControl(select);
    select.activate();
            		
    function onPopupClose(evt) {
            			selectControl.unselect(selectedFeature);
    };
		            
	wfsTasmaniaRoads.events.on({
	            	featureselected: function(event) {
	                var feature = event.feature;
	                   feature.popup = new OpenLayers.Popup.FramedCloud
	                   ("pop",
	                   feature.geometry.getBounds().getCenterLonLat(),
	                   null,
	                   '<form >Direccion:<br/><input type="text" id="direccion2" value="'+feature.attributes.direccion+'" name="dir" />'+
	                   '<br/>Numero de apartamento:<br/><input type="text" id="numAp2" value="'+feature.attributes.numapartam+'" name="numApartamento" />'+
	                   '<br/>Tipo de propiedad:<br/><input type="text" id="tipopropiedad2" value="'+feature.attributes.tipoinmueb+'" name="tprop" />'+ 
	                   '<br/>Tipo de transaccion:<br/><input type="text" id="tipotransaccion2" value="'+feature.attributes.tipooperac+'" name="ttrans" />'+
	                   '<br/>Precio:<br/><input type="text" id="precio2" value="'+feature.attributes.precio+'" name="pre" />'+
	                   '<br/>Dormitorios:<br/><input type="text" id="dormitorios2" value="'+feature.attributes.cantdormit+'" name="dor" />'+
	                   '<br/>Garage:<br/><input type="text" id="garage2" value="'+feature.attributes.garage+'" name="gar" />'+
	                   '<br/>Tamanio:<br/><input type="text" id="tamanio2" value="'+feature.attributes.tamano+'" name="tam" />'+
	                   '<br/>Barrios:<br/><input type="text" id="barrio2" value="'+feature.attributes.barrio+'" name="barr" />'+
	                   '<br/>Banos:<br/><input type="text" id="banos2" value="'+feature.attributes.banos+'" name="ban" />'+
	                   '<br/>Calefaccion:<br/><input type="text" id="calefaccion2" value="'+feature.attributes.calefaccion+'" name="cale" />'+
	                   '<br/>Parrillero:<br/><input type="text" id="parrillero2" value="'+feature.attributes.parillero+'" name="parr" />'+
	                   '<br/>Piscina:<br/><input type="text" id="piscina2" value="'+feature.attributes.piscina+'" name="pis" />'+
	                   '<br/>Estado:<br/><input type="text" id="estado2" value="'+feature.attributes.estado+'" name="est" />'+
	                   '<br/>Descripcion:<br/><input type="text" id="descripcion2" value="'+feature.attributes.descripcion+'" name="des" /></form>',
	                   null,
	                   true 
	                   );
	                mapa.addPopup(feature.popup);  
	                },

		                <!-- destroy popup when feature is no longer selected. Prevents showing 2 Popups at the same time-->
			     	featureunselected: function(event) {
		                    var feature = event.feature;
		                    mapa.removePopup(feature.popup);
		                    feature.popup.destroy();
		                    feature.popup = null;
		            }
		         
	});
		            

	var save=  new OpenLayers.Control.Button({displayClass: 'olControlSaveFeaturePoint',
	   	   trigger: function() {
	   		
	   		var geom_1 = new OpenLayers.Geometry.Point(f.geometry.getBounds().getCenterLonLat().lon,f.geometry.getBounds().getCenterLonLat().lat)
	        var minDistance = rambla.features[0].geometry.distanceTo(geom_1, {details: false, edge: true});
	   		
	   		var minDistanceParada,minDistanceLiceo,minDistanceComercio;
	   		
	        var index = 0,index2 = 0;

			//<![CDATA[
		    for (var i = 1; i <=  rambla.features.length - 1; i++) {
               var dist = rambla.features[i].geometry.distanceTo(geom_1, {details: false, edge: true});
               if (dist < minDistance) {
                  	 index = i;
                 	 minDistance = dist; 
               	} 	
            }
		    var d = geom_1.distanceTo(rambla.features[index].geometry,{details: true, edge: true});
           	var line = new OpenLayers.Geometry.LineString([geom_1, new OpenLayers.Geometry.Point(d.x1,d.y1)]);
           	dista = Math.round(line.getGeodesicLength("EPSG:3857"));
           	
            if (comercios.features.length > 1)
            {
            	index = 0
                 minDistanceComercio = comercios.features[0].geometry.distanceTo(geom_1, {details: false, edge: true});
			    for (var i = 1; i <=  comercios.features.length - 1; i++) {
		               var dist = comercios.features[i].geometry.distanceTo(geom_1, {details: false, edge: true});
		               if (dist < minDistanceComercio) {
		            	   minDistanceComercio = dist; 
		            	   index = i
		               	} 	
		            }
	         		
	           	var d = geom_1.distanceTo(comercios.features[index].geometry,{details: true, edge: true});
	           	var line = new OpenLayers.Geometry.LineString([geom_1, new OpenLayers.Geometry.Point(d.x1,d.y1)]);
	           	distaComercio = Math.round(line.getGeodesicLength("EPSG:3857"));
            }
            
            if (liceos.features.length > 1)
            {
            	minDistanceLiceos = liceos.features[0].geometry.distanceTo(geom_1, {details: false, edge: true});
            	index = 0
	            for (var i = 1; i <=  liceos.features.length - 1; i++) {
		               var dist = liceos.features[i].geometry.distanceTo(geom_1, {details: false, edge: true});
		               if (dist < minDistanceLiceos) {
		            	   minDistanceLiceos = dist; 
		            	   index = i
		               	} 	
		            }
	      		
	        	var d = geom_1.distanceTo(liceos.features[index].geometry,{details: true, edge: true});
	        	var line = new OpenLayers.Geometry.LineString([geom_1, new OpenLayers.Geometry.Point(d.x1,d.y1)]);
	        	distaLiceo = Math.round(line.getGeodesicLength("EPSG:3857"));
            }

            if (paradas.features.length > 1)
           {
            	index = 0
            	minDistanceParada = paradas.features[0].geometry.distanceTo(geom_1, {details: false, edge: true});
	        	for (var i = 1; i <=  paradas.features.length - 1; i++) {
		               var dist = paradas.features[i].geometry.distanceTo(geom_1, {details: false, edge: true});
		               if (dist < minDistanceParada) {
		            	   minDistanceParada = dist; 
		            	   index = i
		               	} 	
		            }
	   		
		     	var d = geom_1.distanceTo(paradas.features[index].geometry,{details: true, edge: true});
		     	var line = new OpenLayers.Geometry.LineString([geom_1, new OpenLayers.Geometry.Point(d.x1,d.y1)]);
		     	distaParada = Math.round(line.getGeodesicLength("EPSG:3857"));
	   	   }
           	//]]>
           	
   		 		f.attributes.adminid="#{loginBean.email}";
	   	   		f.attributes.direccion=document.getElementById("direccion").value;
	   	   		f.attributes.numapartam=parseInt(document.getElementById("numAp").value);
	   	   	    f.attributes.gidpadron=1234; //SETEAR PADRON
	   	   	    f.attributes.tipoinmueb=document.getElementById("tipopropiedad").value;
	   	    	f.attributes.tipooperac=document.getElementById("tipotransaccion").value;
	   	    	f.attributes.precio=parseInt(document.getElementById("precio").value);
	   	    	f.attributes.cantdormit=parseInt(document.getElementById("dormitorios").value);
	   	    	f.attributes.garage=document.getElementById("garage").value;
	   	    	f.attributes.tamano=parseInt(document.getElementById("tamanio").value);
	   	    	f.attributes.barrio=document.getElementById("barrio").value;
	   	    	f.attributes.banos=parseInt(document.getElementById("banos").value);
	   	    	f.attributes.calefaccio=document.getElementById("calefaccion").value;
	   	    	f.attributes.parillero=document.getElementById("parrillero").value;
	   	    	f.attributes.piscina=document.getElementById("piscina").value;
	   	    	f.attributes.estado=document.getElementById("estado").value;
	   	    	f.attributes.descripcio=document.getElementById("descripcion").value;
	   	    	f.attributes.distrambla= dista;
	   	    	f.attributes.distcomercio= distaComercio;
	   	    	f.attributes.distparada= distaParada;
	   	    	f.attributes.distliceo= distaLiceo;
	   	        var campoImagen = document.getElementById("imagen").value;
	   	    	f.attributes.imagen=campoImagen.substring(campoImagen.lastIndexOf("\\")+1);
	   	    	 var campoImagen2 = document.getElementById("imagen2").value;
	   	    	f.attributes.imagen2=campoImagen2.substring(campoImagen2.lastIndexOf("\\")+1);
	   	    	var campoImagen3 = document.getElementById("imagen3").value;
	   	    	f.attributes.imagen3=campoImagen3.substring(campoImagen3.lastIndexOf("\\")+1);	   	
		   	    //SETEAR IMAGEN
	   	    	
	    	   		saveStrategy.save();
	    	   		mapa.removePopup(f.popup);
	                f.popup.destroy();
	                f.popup = null;
	    	   		}, title: 'Save changes' 
	    	 });
	var DeleteFeature = OpenLayers.Class(OpenLayers.Control, {
	     initialize: function(layer, options) {
	     OpenLayers.Control.prototype.initialize.apply(this, [options]);
	     this.layer = layer;
	     this.handler = new OpenLayers.Handler.Feature(
	     this, layer, {click: this.clickFeature}
	     );
	     },
	     clickFeature: function(feature) {
	      // if feature doesn't have a fid, destroy it
	     if(feature.fid == undefined) {
	     this.layer.destroyFeatures([feature]);
	     } else {
	     feature.state = OpenLayers.State.DELETE;
	     this.layer.events.triggerEvent("afterfeaturemodified", {feature: feature});
	     feature.renderIntent = "select";
	     this.layer.drawFeature(feature);
	     saveStrategy.save();
	     }
	     },
	     setMap: function(map) {
	     this.handler.setMap(map);
	     OpenLayers.Control.prototype.setMap.apply(this, arguments);
	     },
	     CLASS_NAME: "OpenLayers.Control.DeleteFeature"
	     });

	     var del = new DeleteFeature(wfsTasmaniaRoads, {title: "Delete Feature"});
	     
	  var drag = new OpenLayers.Control.DragFeature(wfsTasmaniaRoads, {
		  title: "Move Feature", displayClass: "olControlModifyFeaturePoint",
		    clickFeature: function(feature){
		    	
		    
		    	
		    	
		    	feature.state = OpenLayers.State.UPDATE;
				saveStrategy.save();
		    },
		    onComplete: function(feature) {
				lon = feature.geometry.getBounds().getCenterLonLat().lon;
			       lat = feature.geometry.getBounds().getCenterLonLat().lat;
			       var minx, miny;
			       var point = new OpenLayers.LonLat(lon, lat);
			       point.transform(new OpenLayers.Projection('EPSG:3857'),
			   		new OpenLayers.Projection('EPSG:4326'));
			       minx = point.lon;
			       miny = point.lat;
			       var sum = 0.000385794448853;

			       var bounds_object = new OpenLayers.Bounds(minx + sum, miny + sum, minx - sum, miny - sum);


			                 wfsPadrones.filter=new OpenLayers.Filter.Spatial({
			                 type: OpenLayers.Filter.Spatial.BBOX,
			                 value: bounds_object,
			                 //projection : new OpenLayers.Projection('EPSG:4326')
			                 });
			                
			                 wfsPadrones.refresh({force:true});
			    	
							var calle;
			                 var fMinD
			                 setTimeout(function(){
					
				                fMinD=wfsPadrones.features[0];
				                
							var geom_1 = new OpenLayers.Geometry.Point(fMinD.geometry.x, fMinD.geometry.y);
							var geom_2 = new OpenLayers.Geometry.Point(lon, lat);
							var dist= geom_1.distanceTo(geom_2);    
							var fAux;
				        for(var i=1;comparar(i,wfsPadrones.features.length-1)==1;i++ ){
				        	fAux=wfsPadrones.features[i];
				        	geom_1 = new OpenLayers.Geometry.Point(fAux.geometry.x, fAux.geometry.y);
				        	if(comparar(geom_2.distanceTo(geom_1),dist)==1){
				    			dist=geom_2.distanceTo(geom_1);
				    			fMinD=wfsPadrones.features[i];
				    		};
				    	};
				    	
				    	feature.move(fMinD.geometry.getBounds().getCenterLonLat());
				    	calle=fMinD.attributes.nom_calle;
				    	feature.attributes.direccion=calle;
				    	feature.attributes.numapartam=fMinD.attributes.num_puerta;
		    	feature.popup = new OpenLayers.Popup.FramedCloud
	         ("pop",
	         feature.geometry.getBounds().getCenterLonLat(),
	         null,           
	         '<div class="form-group">'+
	'<form class="form-horizontal">'+
		'<div class="row">'+
		     '<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">'+
			      '<strong>DATOS DE LA NUEVA UBICACION: </strong>'+
		     '</div>'+
		'</div>'+
		
		'<div class="row">'+
		     '<div class="col-xs-8 col-sm-8 col-md-8 col-lg-8">'+
				  '<input class="form-control" type="text" id="direccion3" value="'+fMinD.attributes.nom_calle+'" name="dir" placeholder="Dirección"></input>'+
		     '</div>'+
		     '<div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">'+
				  '<input class="form-control" placeholder="Nro de apto" type="text" value="'+fMinD.attributes.num_puerta+'" id="numAp3" name="numApartamento"/>'+
		     '</div>'+
		'</div>'+
		
	
	'</form>'+
	'</div>',
	         null,
	         true 
	         );
			    	mapa.addPopup(feature.popup); 
			    	feature.state = OpenLayers.State.UPDATE;
					
//	 				
					saveStrategy.save();
// 					
				
				}, 600);
			
				
				
				}
		});
		       
	panel.addControls([drag,del,draw,save]);
	mapa.addControl(panel);  
 			
			
	//mapa.addLayer(wmsTasmania);			
	mapa.addLayer(osm);
	mapa.addLayer(wfsPadrones);
	var fromProjection = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
    var toProjection   = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection
    var position       = new OpenLayers.LonLat(-56.21,-34.81).transform( fromProjection, toProjection);
  	mapa.addLayer(wfsTasmaniaRoads);
  	mapa.addLayer(rambla);
  	//mapa.addLayer(wfsPadrones);
  	mapa.addLayer(comercios);
  	mapa.addLayer(liceos);
  	mapa.addLayer(paradas);
  	mapa.zoomToMaxExtent();
 
	mapa.setCenter(position,12);
	
	mapa.addControl(new OpenLayers.Control.LayerSwitcher(true));
	mapa.addControl(new OpenLayers.Control.MousePosition({ numDigits: 6 }));
	mapa.addControl(new OpenLayers.Control.ScaleLine());

     
	}

function showImagen2() {
document.getElementById("imagen2").style.display ="block";
}
function showImagen3() {
document.getElementById("imagen3").style.display ="block";
}
</script>

</ui:composition>
</html>